{"version":3,"sources":["scenes/scene-1/ui/loading/loading.module.scss","scenes/scene-1/index.module.scss","scenes/scene-1/ui/index.module.scss","scenes/scene-1/ui/score/Score.module.scss","components/SceneComponent/SceneComponent.tsx","interfaces/Prefab.ts","scenes/scene-1/game/meshes/player/player.ts","scenes/scene-1/game/meshes/player/animations.ts","utils/chained-list/chained-list.ts","utils/infinite-background/infinite-background.ts","scenes/scene-1/game/meshes/sky.ts","scenes/scene-1/game/meshes/ground.ts","scenes/scene-1/game/meshes/city.ts","scenes/scene-1/game/camera.ts","scenes/scene-1/game/movement/movement.ts","store/store.ts","scenes/scene-1/game/obstacles/obstacles.ts","scenes/scene-1/game/meshes/mountains.ts","scenes/scene-1/game/meshes/street.ts","scenes/scene-1/game/meshes/fence.ts","store/ui.ts","utils/loader/loader.ts","scenes/scene-1/game/index.tsx","scenes/scene-1/ui/loading/loading-screen.png","scenes/scene-1/ui/loading/Loading.tsx","scenes/scene-1/ui/score/Score.tsx","scenes/scene-1/ui/index.tsx","scenes/scene-1/index.tsx","App.tsx","serviceWorkerRegistration.ts","reportWebVitals.ts","index.tsx"],"names":["module","exports","SceneComponent","props","reactCanvas","useRef","antialias","engineOptions","adaptToDeviceRatio","sceneOptions","onRender","rest","onSceneReady","useEffect","current","engine","Engine","scene","Scene","isReady","onReadyObservable","addOnce","currentScene","runRenderLoop","render","resize","getEngine","window","addEventListener","dispose","removeEventListener","ref","style","width","height","APrefab","_mesh","_parent","_texture","_sounds","events","states","Player","died","die","bind","initSounds","fall","Sound","this","volume","play","mesh","physicsImpostor","beginDirectAnimation","frameRate","positionFrames","rotationFrames","position","Animation","ANIMATIONTYPE_FLOAT","ANIMATIONLOOPMODE_CONSTANT","rotation","push","frame","value","setKeys","Math","PI","dieAnimation","SceneLoader","ImportMeshAsync","player","meshes","name","parent","Vector3","y","PhysicsImpostor","BoxImpostor","mass","restitution","rotationQuaternion","ListNode","next","ChainedList","_head","_last","_size","item","head","last","InfiniteBackground","velocityX","velocityY","opts","instancesQty","container","instances","Mesh","initializeMeshes","despawnPlace","fillSpawnSpace","spawnPlace","onBeforeRenderObservable","add","animationRatio","getAnimationRatio","instance","x","addInstance","removeInstance","removeFirstItem","addChild","forEach","setEnabled","lastMeshSize","getBoundingInfo","boundingBox","extendSizeWorld","lastMeshPosition","currentMeshSize","positionX","positionY","positionZ","z","addItem","getMesh","hasEnougth","positionLastMesh","index","floor","random","length","clone","Sky","background","MeshBuilder","CreatePlane","backgroundMaterial","StandardMaterial","diffuseColor","Color3","specularColor","material","Error","createSliderGround","sliderGround","CreateBox","sliderGroundMaterial","diffuseTexture","Texture","hasAlpha","createInvisibleGround","invisibleGround","size","invisibleGroundMaterial","alpha","Ground","City","test","createCamera","camera","ArcRotateCamera","radius","playerJump","tempOpts","jump","impulseDirection","jumping","isJumping","canJump","setLinearVelocity","applyImpulse","scale","getAbsolutePosition","move","inputMap","newScene","actionManager","ActionManager","registerAction","ExecuteCodeAction","OnKeyDownTrigger","evt","sourceEvent","key","type","OnKeyUpTrigger","onPointerObservable","pointerInfo","isMobile","Store","score","onUpdateScore","Observable","Obstacles","prevTime","Date","getTime","currentTime","trySpawnTime","obstacleLimit","trySpawnTimeout","activeElement","obstacles","obstacleCounter","createObstaclesLimit","i","jumpedObstacle","notifyObservers","checkObstacleHit","checkObstacleHitsLimit","obstacle","intersectsMesh","splice","pointPlane","getChildMeshes","intersected","minDelay","maxDelay","isMaxDelay","isMinDelay","shouldSpawn","kind","generateElement","planeMaterial","trash","dog","scaling","cone","bucket","createObstacles","canSpawn","spawnObstacle","Mountains","mountain","mountainMaterial","Street","street","streetMaterial","texture","wAng","Fence","fence","fenceMaterial","UIEvents","isLoading","onUpdateLoading","loader","assets","Promise","all","onSceneMount","enablePhysics","AmmoJSPlugin","sky","mountains","city","ground","initMesh","HemisphericLight","intensity","init","moveOpts","jumpStartTime","loop","autoplay","registerOnPhysicsCollide","spawnWithDelay","Game","id","memo","Loading","className","scss","img","src","Score","UI","useState","setIsLoading","ui","Scene1","setScore","canvaContainer","App","Boolean","location","hostname","match","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Ammo","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.e6325a9a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"loading_container__3V_wZ\",\"img\":\"loading_img__9xYrz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"canvaContainer\":\"scene-1_canvaContainer__2Oiz4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ui\":\"ui_ui__3YHo6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"score\":\"Score_score__2k693\"};","import { useEffect, useRef } from 'react';\n\nimport { Engine, Scene } from 'babylonjs';\n\nimport { ISceneComponent } from './types';\n\nfunction SceneComponent(props: ISceneComponent) {\n  const reactCanvas = useRef(null);\n  const {\n    antialias,\n    engineOptions,\n    adaptToDeviceRatio,\n    sceneOptions,\n    onRender,\n    onSceneReady,\n    ...rest\n  } = props;\n\n  useEffect(() => {\n    if (reactCanvas.current) {\n      const engine = new Engine(reactCanvas.current, antialias, engineOptions, adaptToDeviceRatio);\n      const scene = new Scene(engine, sceneOptions);\n      if (scene.isReady()) {\n        props.onSceneReady(scene);\n      } else {\n        scene.onReadyObservable.addOnce((currentScene) => props.onSceneReady(currentScene));\n      }\n\n      engine.runRenderLoop(() => {\n        if (typeof onRender === 'function') {\n          onRender(scene);\n        }\n        scene.render();\n      });\n\n      const resize = () => {\n        scene.getEngine().resize();\n      };\n\n      if (window) {\n        window.addEventListener('resize', resize);\n      }\n\n      return () => {\n        scene.getEngine().dispose();\n\n        if (window) {\n          window.removeEventListener('resize', resize);\n        }\n      };\n    }\n\n    return undefined;\n  }, [adaptToDeviceRatio, antialias, engineOptions, onRender, props, reactCanvas, sceneOptions]);\n\n  return <canvas ref={reactCanvas} {...rest} style={{width: '100%', height: '100%'}} />;\n}\n\nexport default SceneComponent;\n","import { Mesh, Nullable, Scene, Sound, Texture } from 'babylonjs';\nimport { TGenericObject } from '../utils/types';\n\nexport interface IPrefab {\n  events: Nullable<TGenericObject>;\n  states: Nullable<TGenericObject>;\n}\n\nexport abstract class APrefab implements IPrefab {\n  protected _mesh!: Mesh | TGenericObject<Mesh>;\n  protected _parent!: Mesh;\n  protected _texture!: Texture;\n  protected _sounds!: TGenericObject<Sound>;\n\n  events = {};\n  states = {};\n\n  constructor(protected scene: Scene) {}\n\n  abstract initMesh(): Promise<void>;\n  abstract initSounds(): Promise<void>;\n}\n","import { PhysicsImpostor, Scene, SceneLoader, Sound, Mesh, Vector3 } from 'babylonjs';\nimport { APrefab  } from '../../../../../interfaces/Prefab';\nimport { TGenericObject } from '../../../../../utils/types';\nimport { dieAnimation } from './animations';\n\nexport class Player extends APrefab {\n  // SAVED\n  // declare _mesh: Mesh;\n\n  states = {\n    died: false,\n  };\n\n  events = {\n    die: this.die.bind(this)\n  };\n\n  constructor(scene: Scene) {\n    super(scene);\n    this.initSounds();\n  }\n\n  async initSounds() {\n    const fall = new Sound(\"fall\", \"assets/scene-1/songs/fall.mp3\", this.scene, null, {\n      volume: 0.5\n    })\n\n    this._sounds = {\n      fall,\n    }\n  }\n\n  die() {\n    this.states.died = true;\n    this._sounds.fall.play();\n    this.mesh?.physicsImpostor?.dispose();\n    this.scene.beginDirectAnimation(this.mesh, dieAnimation(), 0, 5, false);\n  }\n\n  async initMesh() {\n    const mesh = await SceneLoader.ImportMeshAsync(\"\", `assets/scene-1/meshes/cat/`, \"cat.babylon\", this.scene);\n    const player = <Mesh> mesh.meshes[0];\n\n    player.name = \"player\"\n    player.parent = null;\n    player.position = new Vector3(-1.5, 1, 3.55);\n    player.rotation.y += -Math.PI / 2;\n  \n    player.physicsImpostor = new PhysicsImpostor(\n      player, PhysicsImpostor.BoxImpostor, \n      { mass: 0.8, restitution: 0 }\n    );\n\n    player.rotationQuaternion = null;\n    this._mesh = player;\n  }\n\n  get mesh() {\n    return this._mesh;\n  }\n}\n","import {Animation } from 'babylonjs';\n\nexport const dieAnimation = () => {\n  const frameRate = 0.2;\n  const positionFrames = [];\n  const rotationFrames = [];\n\n  const position = new Animation(\n    \"ySlide\",\n    \"position.y\",\n    frameRate,\n    Animation.ANIMATIONTYPE_FLOAT,\n    Animation.ANIMATIONLOOPMODE_CONSTANT\n  );\n\n  const rotation = new Animation(\n    \"Rotation\", \n    \"rotation.x\", \n    frameRate, \n    Animation.ANIMATIONTYPE_FLOAT,\n    Animation.ANIMATIONLOOPMODE_CONSTANT\n  );\n\n  positionFrames.push({ frame: 0 * frameRate, value: -0.56 });\n  positionFrames.push({ frame: 0.8 * frameRate, value: 1 });\n  positionFrames.push({ frame: 2.3 * frameRate, value: -6 });\n  position.setKeys(positionFrames);\n\n \n  rotationFrames.push({ frame: 0 * frameRate, value: -Math.PI/2 });\n  rotationFrames.push({ frame: 0.8 * frameRate, value: Math.PI/2 });\n  rotation.setKeys(rotationFrames);\n\n  return [position, rotation];\n}","export class ListNode<T> {\n  constructor(\n      public mesh: T | null,\n      public next: ListNode<T> | null = null\n  ) {\n      this.next = null;\n  }\n}\n\nexport class ChainedList<T> {\n  private _head: ListNode<T> | null = null\n  private _last: ListNode<T> | null = null\n  private _size = 0;\n\n  constructor() {}\n\n  get head() {\n      return this._head;\n  }\n\n  get last() {\n      return this._last;\n  }\n\n  \n  get size() {\n      return this._size;\n  }\n\n  removeFirstItem() {\n      if (this._head) {\n          this._head = this._head.next;\n          this._size--;\n      }\n  }\n\n  addItem(item: ListNode<T>) {\n      if (!this.head) {\n          this._head = item;\n      }\n\n      if (this.last) {\n          this.last.next = item;\n      }\n\n      this._size++;\n      this._last = item;\n  }\n\n  clear() {\n      this._head = null;\n  }\n}","import { Mesh, Scene, Vector3 } from 'babylonjs';\nimport { ChainedList, ListNode } from '../chained-list/chained-list';\nimport { IInfiniteBackground, TCoordinates, TInstance, TOptions } from './types';\n\n/**\n * TODO:\n * Adicionar validação de limiter por raio permitindo o threshold ser para qualquer direção\n * Colocar tudo como filho de um mesh especifico para facilitar o debug. Talvez um mesh do infinite scrolling ou o proprio baseMesh\n * Não posso partir do pressuposto que a imagem está no centro, nem que a camera está no centro, preciso, ou de parametros para isso, ou definir isso programaticamente\n * Fazer o calculo de spawnPlace e despawnPlace pra quando o spawn for a esquerda do despawn \n */\nexport class InfiniteBackground {\n  name: string;\n  container: Mesh;\n  parent?: Mesh;\n  meshes: Mesh[];\n  instances: ChainedList<Mesh>;\n  instancesQty = 0;\n\n  constructor(\n    name: string,\n    meshes: IInfiniteBackground['mesh'][],\n    scene: Scene, {\n      velocityX = 0, \n      velocityY = 0, \n      instancesQty = 2,\n      ...opts\n    }: TOptions\n  ) {\n    this.parent = opts.parent;\n    this.container = new Mesh(`${name}-infinity-container`, scene);\n    this.name = name;\n    this.meshes = meshes;\n    this.instances = new ChainedList<Mesh>();\n\n    this.initializeMeshes(opts.despawnPlace);\n\n    this.fillSpawnSpace(opts.spawnPlace, opts.despawnPlace);\n\n    scene.onBeforeRenderObservable.add(() => {\n      const animationRatio = scene.getAnimationRatio();\n      let instance = this.instances.head;\n\n      while (instance) {\n        instance.mesh!.position.x += velocityX * animationRatio;\n        instance.mesh!.position.y += velocityY * animationRatio;\n\n        instance = instance.next;\n\n        if (this.instances.last!.mesh!.position.x < opts.spawnPlace.x) this.addInstance();\n        if (instance && instance.mesh!.position.x < opts.despawnPlace.x) this.removeInstance();\n      }\n    })\n  }\n\n  removeInstance() {\n    this.instances.head!.mesh!.dispose();\n    this.instances.removeFirstItem();\n  }\n\n  initializeMeshes(spawnPlace: TCoordinates) {\n    this.parent?.addChild(this.container);\n\n    this.meshes.forEach(mesh => {\n      mesh.setEnabled(false);\n    });\n  }\n\n  positionLastMesh(mesh: Mesh) {\n    const lastMeshSize = this.instances.last!.mesh!.getBoundingInfo().boundingBox.extendSizeWorld;\n    const lastMeshPosition = this.instances.last!.mesh!.position;\n    const currentMeshSize = mesh.getBoundingInfo().boundingBox.extendSizeWorld;\n    const positionX = lastMeshPosition.x + lastMeshSize.x + currentMeshSize.x;\n    const positionY = lastMeshPosition.y;\n    const positionZ = lastMeshPosition.z;\n\n    mesh.position = new Vector3(positionX, positionY, positionZ);\n  }\n\n  fillSpawnSpace(spawnPlace: TCoordinates, despawnPlace: TCoordinates) {\n    this.instances.addItem(new ListNode(this.getMesh()));\n    let hasEnougth = false;\n    \n    this.instances.last!.mesh!.position = new Vector3(despawnPlace.x, despawnPlace.y, despawnPlace.z);\n    \n    while(!hasEnougth) {\n      const mesh = this.getMesh();\n\n      this.positionLastMesh(mesh);\n      this.instances.addItem(new ListNode(mesh));\n\n      if (this.instances.last!.mesh!.position.x > spawnPlace.x) {\n        hasEnougth = true;\n      }\n    }\n  }\n\n  addInstance() {\n    const instance = this.getMesh();\n\n    this.positionLastMesh(instance);\n\n    this.instances.addItem(new ListNode(instance));\n  }\n\n  getMesh(): Mesh {\n    const index = Math.floor(Math.random() * this.meshes.length);\n    const clone = this.meshes[index].clone();\n    \n    clone.setEnabled(true);\n    this.container?.addChild(clone);\n    \n    clone.name = `${this.instancesQty}-${this.name}`;\n    this.instancesQty++;\n\n    return clone;\n  }\n}\n","import { Color3, Mesh, MeshBuilder, StandardMaterial } from 'babylonjs';\nimport { APrefab } from '../../../../interfaces/Prefab';\nimport { InfiniteBackground } from '../../../../utils/infinite-background/infinite-background';\n\nexport class Sky extends APrefab {\n  async initMesh() {\n    const background = MeshBuilder.CreatePlane('sky', { width: 10, height: 20 });\n    const backgroundMaterial = new StandardMaterial('skyMaterial', this.scene);\n    const parent = new Mesh(\"sky\", this.scene);\n\n    background.position.z = 5;\n    background.position.y = 0.3;\n\n    backgroundMaterial.diffuseColor = new Color3(95/255, 165/255, 245/255);\n    backgroundMaterial.specularColor = new Color3(0, 0, 0);\n    background.material = backgroundMaterial;\n\n    new InfiniteBackground('sky', [background], this.scene, {\n      velocityX: -0.01,\n      parent,\n      spawnPlace: {\n        z: 20,\n        x: 26,\n        y: 0\n      },\n      despawnPlace: {\n        z: 20,\n        x: -30,\n        y: 0\n      }\n    })\n  }\n\n  async initSounds() {\n    throw new Error('Method not implemented.');\n  }\n}\n","import { Color3, Color4, Mesh, MeshBuilder, PhysicsImpostor, Scene, StandardMaterial, Texture, Vector3 } from 'babylonjs';\nimport { APrefab } from '../../../../interfaces/Prefab';\nimport { InfiniteBackground } from '../../../../utils/infinite-background/infinite-background';\n\nfunction createSliderGround(scene: Scene, container: Mesh) {\n  const sliderGround = MeshBuilder.CreateBox('slider-ground', { width: 10, height: 1 });\n  const sliderGroundMaterial = new StandardMaterial('groundMaterial', scene);\n\n  sliderGroundMaterial.diffuseTexture = new Texture(\"assets/scene-1/textures/ground.png\", scene);\n  sliderGroundMaterial.diffuseTexture.hasAlpha = true;\n  sliderGroundMaterial.specularColor = new Color3(0, 0, 0);\n  sliderGround.material = sliderGroundMaterial;\n\n  new InfiniteBackground('slider-ground', [sliderGround], scene, {\n    velocityX: -0.05, \n    parent: container, \n    spawnPlace: {\n      x: 8,\n      z: 3.55,\n      y: -1.5\n    },\n    despawnPlace: {\n      x: -8,\n      z: 3.55,\n      y: -1.5\n    },\n  });\n\n  return sliderGround;\n}\n\nfunction createInvisibleGround(scene: Scene) {\n  const invisibleGround = MeshBuilder.CreateBox('invisible-ground', { size: 1 });\n  const invisibleGroundMaterial = new StandardMaterial('groundMaterial', scene);\n\n  invisibleGround.position = new Vector3(-1.5, -1.5, 3.55);\n\n  invisibleGroundMaterial.alpha = 0;\n  invisibleGround.material = invisibleGroundMaterial;\n\n  invisibleGround.physicsImpostor = new PhysicsImpostor(invisibleGround, PhysicsImpostor.BoxImpostor, {\n    mass: 0,\n    restitution: 0\n  });\n\n  return invisibleGround;\n}\n\nexport class Ground extends APrefab {\n  async initMesh() {\n    const container = new Mesh(\"ground\", this.scene);\n\n    const sliderGround = createSliderGround(this.scene, container);\n    const invisibleGround = createInvisibleGround(this.scene);\n  \n    container.addChild(sliderGround);\n    container.addChild(invisibleGround);\n\n    this._mesh = {\n      invisibleGround,\n      sliderGround\n    }\n  }\n\n  async initSounds() {\n    throw new Error('Method not implemented.');\n  }\n  \n  get mesh() {\n    return this._mesh;\n  }\n}\n","import { Mesh, Scene, SceneLoader } from 'babylonjs';\nimport { APrefab } from '../../../../interfaces/Prefab';\nimport { InfiniteBackground } from '../../../../utils/infinite-background/infinite-background';\n\nexport class City extends APrefab {\n  async initMesh() {\n    const test = await SceneLoader.ImportMeshAsync(\"\", `assets/scene-1/meshes/background/casas/`, \"test.babylon\", this.scene);\n    const parent = new Mesh(\"background\", this.scene);\n\n    test.meshes.forEach(mesh => {\n      parent.addChild(mesh);\n    })\n\n    new InfiniteBackground(\n      'background',\n      test.meshes as Mesh[],\n      this.scene, {\n      velocityX: -0.05,\n      parent,\n      spawnPlace: {\n        z: 13,\n        x: 26,\n        y: -2\n      },\n      despawnPlace: {\n        z: 13,\n        x: -15,\n        y: -1.5\n      }\n    });\n  }\n\n  async initSounds() {\n    throw new Error('Method not implemented.');\n  }\n  \n}\n","import { ArcRotateCamera, Scene, Vector3 } from 'babylonjs';\n\nexport function createCamera(scene: Scene) {\n  const camera = new ArcRotateCamera('camera', -Math.PI / 2, Math.PI / 2, 0, new Vector3(0, 0, 0), scene);\n  camera.radius = 0;\n\n  return camera;\n}","import { ActionManager, ExecuteCodeAction, Mesh, Scene, Sound, Vector3 } from 'babylonjs';\nimport { Player } from '../meshes/player/player';\nimport { IMove } from '../types';\nimport { isMobile } from 'react-device-detect';\n\nfunction playerJump(player: Player, scene: Scene, tempOpts: IMove) {\n  const jump = new Sound(\"jump\", \"assets/scene-1/songs/jump.mp3\", scene, null, {\n    volume: 0.5\n  });\n\n  const impulseDirection = new Vector3(0, 1, 0);\n  const impulseMagnitude = 10.5;\n\n  jump.play();\n\n  if (player && player.mesh.physicsImpostor) {\n    const animationRatio = scene.getAnimationRatio();\n    tempOpts.jumping.isJumping = true;\n    tempOpts.jumping.canJump = false;\n    (player.mesh as Mesh).physicsImpostor!.setLinearVelocity(new Vector3(0, 0, 0));\n    player.mesh.physicsImpostor.applyImpulse(\n      impulseDirection.scale(impulseMagnitude * animationRatio), \n      (player.mesh as Mesh).getAbsolutePosition()\n    );\n  }\n}\n\nexport function move(scene: Scene, player: Player, opts: IMove): IMove {\n  const tempOpts = { ...opts };\n  const inputMap: { [key: string]: boolean } = {};\n  const newScene = scene;\n\n  newScene.actionManager = new ActionManager(scene);\n\n  newScene.actionManager.registerAction(\n    new ExecuteCodeAction(ActionManager.OnKeyDownTrigger, function handleKeyDown(evt) {\n      inputMap[evt.sourceEvent.key] = evt.sourceEvent.type === 'keydown';\n    })\n  );\n\n  newScene.actionManager.registerAction(\n    new ExecuteCodeAction(ActionManager.OnKeyUpTrigger, function handleKeyUp(evt) {\n      inputMap[evt.sourceEvent.key] = evt.sourceEvent.type === 'keydown';\n    })\n  );\n\n  newScene.onPointerObservable.add((pointerInfo) => {\n    if (tempOpts.jumping.canJump && isMobile) {\n      playerJump(player, scene, tempOpts);\n    }\n  });\n\n  newScene.onBeforeRenderObservable.add(() => {\n    if (inputMap[' '] && tempOpts.jumping.canJump) {\n      playerJump(player, scene, tempOpts);\n    }\n  });\n\n  return tempOpts;\n}","import { Observable } from 'babylonjs';\n\nconst StoreSingleton = function (this: any) {\n  this.score = 0;\n  this.onUpdateScore = new Observable();\n\n  return this;\n} as any as { new (): any; };\n\nconst Store = new StoreSingleton();\nexport { Store };","import { Mesh, MeshBuilder, Scene, SceneLoader, Sound, StandardMaterial, Vector3 } from 'babylonjs';\nimport { Store } from '../../../../store/store';\nimport { Player } from '../meshes/player/player';\nimport { IObstacles } from './types';\n\nexport class Obstacles implements IObstacles {\n  private prevTime = new Date().getTime();\n  private currentTime = new Date().getTime();\n  private trySpawnTime = new Date().getTime();\n  private obstacleLimit: Mesh | undefined;\n  private trySpawnTimeout: number = 0;\n  private activeElement: Mesh[] = [];\n  private obstacles: Mesh[] = [];\n  private container: Mesh;\n  private obstacleCounter = 0;\n\n  constructor(\n    private scene: Scene, \n    private player: Player,\n  ) {\n    this.container = new Mesh(\"obstacles-container\");\n    this.createObstaclesLimit();\n\n    this.scene.onBeforeRenderObservable.add(() => {\n      const animationRatio = this.scene.getAnimationRatio();\n\n      for (let i = this.activeElement.length - 1; i >= 0; i--) {\n        this.activeElement[i].position.x += -0.05 * animationRatio;\n\n        if (this.jumpedObstacle(this.activeElement[i]) && !this.player.states.died) {\n          Store.onUpdateScore.notifyObservers(++Store.score);\n        }\n\n        this.checkObstacleHit(this.activeElement[i]);\n        this.checkObstacleHitsLimit(this.activeElement[i], i);\n      }\n    });\n  }\n\n  private checkObstacleHit(obstacle: Mesh) {\n    if ((this.player.mesh as Mesh)?.intersectsMesh(obstacle) && !this.player.states.died) {\n      this.player.events.die();\n    }\n  }\n\n  private checkObstacleHitsLimit(obstacle: Mesh, i: number) {\n    if (this.obstacleLimit?.intersectsMesh(obstacle)) {\n      this.activeElement[i].dispose();\n      this.activeElement.splice(i, 1);\n    }\n  }\n\n  private jumpedObstacle(obstacle: Mesh) {\n    const pointPlane = obstacle.getChildMeshes()[0];\n    const intersected = pointPlane ? pointPlane.intersectsMesh(this.player.mesh! as Mesh) : false;\n\n    if (intersected) {\n      pointPlane.dispose();\n    }\n\n    return intersected;\n  }\n\n  private canSpawn(minDelay: number, maxDelay: number) {\n    const isMaxDelay = this.currentTime - this.prevTime > maxDelay;\n    const isMinDelay = this.currentTime - this.prevTime > minDelay;\n    const canTry = this.currentTime - this.trySpawnTime > this.trySpawnTimeout;\n    let shouldSpawn = false;\n\n    if (canTry) {\n      this.trySpawnTime = this.currentTime;\n\n      if (isMinDelay) {\n        shouldSpawn = Math.random() > 0.5;\n        \n        if (isMaxDelay) shouldSpawn = true;\n      }\n    }\n\n    if (shouldSpawn) this.prevTime = this.currentTime;\n\n    return shouldSpawn;\n  }\n\n  private generateElement() {\n    const obstacle = this.obstacleCounter;\n    let kind = this.obstacles;\n    \n    const index = Math.floor(Math.random() * kind.length);\n\n    this.obstacleCounter++;\n\n    return kind[index].clone(`obstacle-${obstacle}`);\n  }\n\n  private spawnObstacle() {\n    const obstacle = this.generateElement();\n    const pointPlane = MeshBuilder.CreatePlane('pointPlane', { width: 1, height: 5 }, this.scene);\n    const planeMaterial = new StandardMaterial('planeMateral', this.scene);\n    \n    obstacle.position.z = 3.55;\n    obstacle.position.y = -1;\n    obstacle.position.x = 3;\n    \n    planeMaterial.alpha = 0;\n    pointPlane.rotation.y = Math.PI / 2;\n    pointPlane.material = planeMaterial;\n    pointPlane.position = new Vector3(3, -1, 3.55);\n\n    obstacle.addChild(pointPlane);\n    this.container.addChild(obstacle);    \n    this.activeElement.push(obstacle);\n  }\n\n  private async createObstacles() {\n    const trash = await SceneLoader.ImportMeshAsync(null, `assets/scene-1/meshes/obstacles/trash/`, \"trash.babylon\", this.scene);\n    trash.meshes[0].rotationQuaternion = null;\n    trash.meshes[0].rotation.y = Math.PI;\n    trash.meshes[0].rotation.x = -Math.PI / 2;\n    trash.meshes[0].position.z = -100;\n    trash.meshes[0].name = \"trash\";\n    this.container.addChild(trash.meshes[0]);\n\n    const dog = await SceneLoader.ImportMeshAsync(null, `assets/scene-1/meshes/obstacles/dog/`, \"dog.babylon\", this.scene);\n    dog.meshes[0].scaling = new Vector3(0.5, 0.5, 0.5);\n    dog.meshes[0].rotationQuaternion = null;\n    dog.meshes[0].rotation.y = Math.PI / 2;\n    dog.meshes[0].position.z = -100;\n    dog.meshes[0].name = \"dog\";\n    this.container.addChild(dog.meshes[0]);\n\n    const cone = await SceneLoader.ImportMeshAsync(null, `assets/scene-1/meshes/obstacles/cone/`, \"cone.babylon\", this.scene);\n    cone.meshes[0].scaling = new Vector3(0.5, 0.5, 0.5); \n    cone.meshes[0].rotationQuaternion = null;\n    cone.meshes[0].rotation.y = Math.PI / 2;\n    cone.meshes[0].position.z = -100;\n    cone.meshes[0].name = \"cone\";\n    this.container.addChild(cone.meshes[0]);\n\n    const bucket = await SceneLoader.ImportMeshAsync(null, `assets/scene-1/meshes/obstacles/bucket/`, \"bucket.babylon\", this.scene);\n    bucket.meshes[0].scaling = new Vector3(0.005, 0.005, 0.005); \n    bucket.meshes[0].rotationQuaternion = null;\n    bucket.meshes[0].rotation.y = Math.PI / 2;\n    bucket.meshes[0].position.z = -100;\n    bucket.meshes[0].name = \"bucket\";\n    this.container.addChild(bucket.meshes[0]);\n\n    this.obstacles = [\n      trash.meshes[0],\n      cone.meshes[0],\n      dog.meshes[0],\n      bucket.meshes[0],\n    ] as Mesh[];\n  }\n\n  private createObstaclesLimit() {\n    this.obstacleLimit = MeshBuilder.CreatePlane(\"plane\", { width: 10, height: 10 }, this.scene);\n    this.obstacleLimit.position = new Vector3(-10, 0, 3.5);\n    this.obstacleLimit.rotationQuaternion = null;\n    this.obstacleLimit.rotation.y = -Math.PI / 2;\n  }\n  \n  init() {\n    this.createObstacles();\n  }\n\n  spawnWithDelay(minDelay: number, maxDelay: number) {\n    this.currentTime = new Date().getTime();\n    this.trySpawnTimeout = Math.floor(minDelay / 4);\n\n    if (this.canSpawn(minDelay, maxDelay)) {\n      this.spawnObstacle();\n    }\n  }\n}","import { Color3, Mesh, MeshBuilder, Scene, StandardMaterial, Texture } from 'babylonjs';\nimport { APrefab } from '../../../../interfaces/Prefab';\nimport { InfiniteBackground } from '../../../../utils/infinite-background/infinite-background';\n\nexport class Mountains extends APrefab {\n  async initMesh() {\n    const mountain = MeshBuilder.CreatePlane('mountain', { width: 20, height: 4 });\n    const mountainMaterial = new StandardMaterial('mountainMaterial', this.scene);\n    const parent = new Mesh(\"mountain\", this.scene);\n\n    mountain.position.z = 5;\n    mountain.position.y = 0.3;\n\n    mountainMaterial.diffuseTexture = new Texture(\"assets/scene-1/textures/mountains.png\", this.scene);\n    mountainMaterial.diffuseTexture.hasAlpha = true;\n    mountainMaterial.specularColor = new Color3(0, 0, 0);\n    mountain.material = mountainMaterial;\n\n    new InfiniteBackground('mountain', [mountain], this.scene, {\n      velocityX: -0.01,\n      parent,\n      spawnPlace: { z: 17, x: 26, y: 0.1 },\n      despawnPlace: { z: 17, x: -15, y: 0.1 }\n    })\n  }\n\n  async initSounds() {\n    throw new Error('Method not implemented.');\n  }\n}\n","import { Color3, Mesh, MeshBuilder, Scene, StandardMaterial, Texture } from 'babylonjs';\nimport { APrefab } from '../../../../interfaces/Prefab';\nimport { InfiniteBackground } from '../../../../utils/infinite-background/infinite-background';\n\nexport class Street extends APrefab {\n  async initSounds() {\n    throw new Error('method is not implemented yet');\n  }\n\n  async initMesh() {\n    const street = MeshBuilder.CreatePlane('street', { width: 10, height: 10 });\n    const streetMaterial = new StandardMaterial('streetMaterial', this.scene);\n    const texture = new Texture(\"assets/scene-1/textures/street.png\", this.scene);\n    const parent = new Mesh(\"street\", this.scene);\n    \n    texture.wAng = -Math.PI / 2;\n  \n    street.position.z = 5;\n    street.position.y = 0.3;\n    street.rotation.x = Math.PI / 2;\n  \n    streetMaterial.diffuseTexture = texture;\n    streetMaterial.specularColor = new Color3(0, 0, 0);\n    street.material = streetMaterial;\n  \n    new InfiniteBackground('street', [street], this.scene, {\n      velocityX: -0.05,\n      parent,\n      spawnPlace: {\n        z: 10.5,\n        x: 26,\n        y: -1.4\n      },\n      despawnPlace: {\n        z: 10.5,\n        x: -15,\n        y: -1.4\n      }\n    })\n  }\n}","import { Color3, Mesh, MeshBuilder, Scene, StandardMaterial, Texture } from 'babylonjs';\nimport { APrefab } from '../../../../interfaces/Prefab';\nimport { InfiniteBackground } from '../../../../utils/infinite-background/infinite-background';\n\nexport class Fence extends APrefab {\n  async initMesh() {\n    const fence = MeshBuilder.CreatePlane('fence', { width: 0.2, height: 1 });\n    const fenceMaterial = new StandardMaterial('fenceMaterial', this.scene);\n    const texture = new Texture(\"assets/scene-1/textures/fence.png\", this.scene);\n    const parent = new Mesh(\"fence\", this.scene);\n\n    fence.position.z = 5;\n    fence.position.y = 0.3;\n\n    fenceMaterial.diffuseTexture = texture;\n    fenceMaterial.diffuseTexture.hasAlpha = true;\n    fenceMaterial.specularColor = new Color3(0, 0, 0);\n    fence.material = fenceMaterial;\n\n    new InfiniteBackground('fence', [fence], this.scene, {\n      velocityX: -0.05,\n      parent,\n      spawnPlace: {\n        z: 14.7,\n        x: 26,\n        y: -1\n      },\n      despawnPlace: {\n        z: 14.7,\n        x: -15,\n        y: -1\n      }\n    })\n  }\n\n  async initSounds() {\n    throw new Error('Method not implemented.');\n  }\n}\n","import { Observable } from 'babylonjs';\n\nconst UISingleton = function (this: any) {\n  this.isLoading = false;\n  this.onUpdateLoading = new Observable();\n\n  return this;\n} as any as { new (): any; };\n\nconst UIEvents = new UISingleton();\nexport { UIEvents };","import { UIEvents } from '../../store/ui';\n\nexport const loader = async (assets: Promise<void>[]) => {\n  UIEvents.onUpdateLoading.notifyObservers(true);\n  await Promise.all(assets);\n  UIEvents.onUpdateLoading.notifyObservers(false);\n}\n","import {\n  Vector3,\n  HemisphericLight,\n  Scene,\n  AmmoJSPlugin,\n  PhysicsImpostor,\n  MeshBuilder,\n  SceneLoader,\n  Color4,\n  Sound,\n  Mesh,\n} from 'babylonjs';\n\nimport SceneComponent from '../../../components/SceneComponent/SceneComponent';\n\nimport { memo } from 'react';\nimport { Player } from './meshes/player/player';\nimport { Sky } from './meshes/sky';\nimport { Ground } from './meshes/ground';\nimport { City } from './meshes/city';\nimport { createCamera } from './camera';\nimport { move } from './movement/movement';\nimport { Obstacles } from './obstacles/obstacles';\nimport { Mountains } from './meshes/mountains';\nimport { Street } from './meshes/street';\nimport { Fence } from './meshes/fence';\nimport { IMove } from './types';\nimport { TGenericObject } from '../../../utils/types';\nimport { loader } from '../../../utils/loader/loader';\n\nasync function onSceneMount(scene: Scene) {\n  scene.enablePhysics(null, new AmmoJSPlugin(false));\n\n  createCamera(scene);\n  const street = new Street(scene);\n  const fence = new Fence(scene);\n  const sky = new Sky(scene);\n  const mountains = new Mountains(scene);\n  const city = new City(scene);\n  const ground = new Ground(scene);\n  const player = new Player(scene);\n\n  await loader([\n    player.initMesh(),\n    street.initMesh(),\n    fence.initMesh(),\n    sky.initMesh(),\n    mountains.initMesh(),\n    city.initMesh(),\n    ground.initMesh()\n  ])\n\n  const light = new HemisphericLight('light', new Vector3(0, 0, 0), scene);\n  light.intensity = 2;\n  const obstacles = new Obstacles(scene, player);\n  await obstacles.init();\n\n  let moveOpts: IMove = {\n    jumping: {\n      canJump: false,\n      isJumping: false,\n      jumpStartTime: 0,\n    },\n  }\n  \n  new Sound(\"BgMusic\", \"assets/scene-1/songs/bg-music.mp3\", scene, null, {\n    loop: true,\n    autoplay: true,\n    volume: 0.2,\n  });\n\n  moveOpts = move(scene, player, moveOpts);\n\n  (player.mesh as Mesh).physicsImpostor!.registerOnPhysicsCollide((ground.mesh as TGenericObject<Mesh>).invisibleGround.physicsImpostor!, () => {\n    moveOpts.jumping.canJump = true;\n    moveOpts.jumping.isJumping = false;\n  });\n  \n  scene.onBeforeRenderObservable.add(() => {\n    obstacles.spawnWithDelay(1000, 2000);\n  });\n\n  // scene.debugLayer.show();\n}\n\nfunction Game() {\n  return (\n    <SceneComponent \n      antialias \n      id=\"babylonscene\"\n      adaptToDeviceRatio\n      onSceneReady={onSceneMount} \n    />\n  );\n}\n\nexport default memo(Game)\n","export default __webpack_public_path__ + \"static/media/loading-screen.33f82ac5.png\";","import scss from './loading.module.scss';\nimport img from './loading-screen.png';\n\nfunction Loading() {\n  return (\n    <div className={scss.container}>\n      <img className={scss.img} src={img} />\n    </div>\n  )\n}\n\nexport default Loading;\n","import scss from './Score.module.scss';\n\nimport { IScore } from './types';\n\nexport function Score(props: IScore) {\n  return (\n    <span className={scss.score}>\n      {props.score}\n    </span>\n  )\n}","import { useEffect, useState } from 'react';\nimport { UIEvents } from '../../../store/ui';\nimport scss from './index.module.scss';\nimport Loading from './loading/Loading';\nimport { Score } from './score/Score';\nimport { IUi } from './types';\n\nexport function UI(props: IUi) {\n  const [isLoading, setIsLoading] = useState(true);\n\n  const gameUI = () => <Score score={props.score} />;\n  const loadingUI = () => <Loading />;\n\n  useEffect(() => {\n    UIEvents.onUpdateLoading.add((isLoading: boolean) => {\n      setIsLoading(isLoading);\n    })\n  }, [])\n\n  return (\n    <div className={scss.ui}>\n      {isLoading ? loadingUI() : gameUI()}\n    </div>\n  );\n}","import scss from './index.module.scss';\n\nimport Game from './game';\nimport { UI } from './ui';\nimport { useEffect, useState } from 'react';\n\nimport { Store } from '../../store/store';\n\nfunction Scene1() {\n  const [score, setScore] = useState(0);\n\n  useEffect(() => {\n    Store.onUpdateScore.add((score: number) => {\n      setScore(score);\n    })\n  }, []);\n\n  return (\n    <div className={scss.canvaContainer}>\n      <Game />\n      <UI score={score} />\n    </div>\n  );\n}\n\nexport default Scene1;\n","import Scene1 from './scenes/scene-1';\n\nconst App = () => <Scene1 />\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nimport * as Ammo from 'ammo.js';\n\nAmmo().then(() => {\n  ReactDOM.render(\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n  );\n  // If you want your app to work offline and load faster, you can change\n  // unregister() to register() below. Note this comes with some pitfalls.\n  // Learn more about service workers: https://cra.link/PWA\n  serviceWorkerRegistration.unregister();\n  \n  // If you want to start measuring performance in your app, pass a function\n  // to log results (for example: reportWebVitals(console.log))\n  // or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n  reportWebVitals();\n});\n\n"],"sourceRoot":""}