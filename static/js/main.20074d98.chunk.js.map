{"version":3,"sources":["scenes/scene-1/ui/startgame/startgame.module.scss","scenes/scene-1/ui/gameover/gameover.module.scss","scenes/scene-1/ui/loading/loading.module.scss","scenes/scene-1/index.module.scss","scenes/scene-1/ui/index.module.scss","scenes/scene-1/ui/score/Score.module.scss","components/SceneComponent/SceneComponent.tsx","interfaces/Prefab.ts","store/ui.ts","scenes/scene-1/game/meshes/player/player.ts","scenes/scene-1/game/meshes/player/animations.ts","utils/chained-list/chained-list.ts","utils/infinite-background/infinite-background.ts","scenes/scene-1/game/meshes/sky.ts","scenes/scene-1/game/meshes/ground.ts","scenes/scene-1/game/meshes/city.ts","scenes/scene-1/game/camera.ts","scenes/scene-1/game/movement/movement.ts","store/store.ts","scenes/scene-1/game/obstacles/obstacles.ts","scenes/scene-1/game/meshes/mountains.ts","scenes/scene-1/game/meshes/street.ts","scenes/scene-1/game/meshes/fence.ts","utils/loader/loader.ts","scenes/scene-1/game/index.tsx","scenes/scene-1/ui/loading/loading-screen.png","scenes/scene-1/ui/loading/Loading.tsx","scenes/scene-1/ui/score/Score.tsx","scenes/scene-1/ui/gameover/Gameover.tsx","scenes/scene-1/ui/startgame/Startgame.tsx","scenes/scene-1/ui/index.tsx","scenes/scene-1/index.tsx","App.tsx","serviceWorkerRegistration.ts","reportWebVitals.ts","index.tsx"],"names":["module","exports","SceneComponent","props","reactCanvas","useRef","antialias","engineOptions","adaptToDeviceRatio","sceneOptions","onRender","rest","onSceneReady","useEffect","current","engine","Engine","scene","Scene","isReady","onReadyObservable","addOnce","currentScene","runRenderLoop","render","resize","getEngine","window","addEventListener","dispose","removeEventListener","ref","style","width","height","APrefab","_mesh","_parent","_texture","_sounds","events","states","UIEvents","this","isLoading","onUpdateLoading","Observable","onGameOver","onStartgame","Player","ground","moveOpts","died","die","bind","initSounds","add","gameover","position","Vector3","rotation","x","Math","PI","physicsImpostor","PhysicsImpostor","BoxImpostor","mass","restitution","rotationQuaternion","registerOnPhysicsCollide","mesh","invisibleGround","jumping","canJump","isJumping","fall","Sound","volume","play","beginDirectAnimation","frameRate","positionFrames","rotationFrames","Animation","ANIMATIONTYPE_FLOAT","ANIMATIONLOOPMODE_CONSTANT","push","frame","value","setKeys","dieAnimation","notifyObservers","SceneLoader","ImportMeshAsync","player","meshes","name","parent","y","ListNode","next","ChainedList","_head","_last","_size","item","head","last","InfiniteBackground","velocityX","velocityY","opts","instancesQty","container","instances","Mesh","initializeMeshes","despawnPlace","fillSpawnSpace","spawnPlace","onBeforeRenderObservable","animationRatio","getAnimationRatio","instance","addInstance","removeInstance","removeFirstItem","addChild","forEach","setEnabled","lastMeshSize","getBoundingInfo","boundingBox","extendSizeWorld","lastMeshPosition","currentMeshSize","positionX","positionY","positionZ","z","addItem","getMesh","hasEnougth","positionLastMesh","index","floor","random","length","clone","Sky","background","MeshBuilder","CreatePlane","backgroundMaterial","StandardMaterial","diffuseColor","Color3","specularColor","material","Error","createSliderGround","sliderGround","sliderGroundMaterial","diffuseTexture","Texture","createInvisibleGround","CreateBox","size","invisibleGroundMaterial","alpha","Ground","City","test","createCamera","camera","ArcRotateCamera","radius","attachControl","playerJump","tempOpts","jump","impulseDirection","setLinearVelocity","applyImpulse","scale","getAbsolutePosition","move","inputMap","newScene","actionManager","ActionManager","registerAction","ExecuteCodeAction","OnKeyDownTrigger","evt","sourceEvent","key","type","OnKeyUpTrigger","onPointerObservable","pointerInfo","isMobile","Store","score","onUpdateScore","Obstacles","prevTime","Date","getTime","currentTime","trySpawnTime","obstacleLimit","trySpawnTimeout","activeElement","obstacles","obstacleCounter","createObstacles","createObstaclesLimit","obstacle","startgame","spawnWithDelay","i","jumpedObstacle","checkObstacleHit","checkObstacleHitsLimit","intersectsMesh","splice","pointPlane","getChildMeshes","intersected","minDelay","maxDelay","isMaxDelay","isMinDelay","shouldSpawn","kind","generateElement","planeMaterial","trash","dog","scaling","cone","bucket","canSpawn","spawnObstacle","Mountains","mountain","mountainMaterial","hasAlpha","wrapU","CLAMP_ADDRESSMODE","wrapV","Street","street","streetMaterial","texture","wAng","Fence","fence","fenceMaterial","loader","assets","Promise","all","onSceneMount","enablePhysics","AmmoJSPlugin","jumpStartTime","sky","mountains","city","initMesh","HemisphericLight","intensity","debugLayer","show","Game","id","memo","Loading","className","scss","img","src","Score","Gameover","message","restart","onClick","document","getElementById","focus","Startgame","tip","init","UI","useState","setIsLoading","setGameOver","setStartGame","ui","Scene1","setScore","canvaContainer","App","Boolean","location","hostname","match","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Ammo","ReactDOM","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.20074d98.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"startgame_container__qGNPD\",\"message\":\"startgame_message__i736C\",\"tip\":\"startgame_tip__33UIg\",\"init\":\"startgame_init__lkADs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"gameover_container__2MKZ8\",\"message\":\"gameover_message__2PDYs\",\"restart\":\"gameover_restart__xI9i6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"loading_container__3V_wZ\",\"img\":\"loading_img__9xYrz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"canvaContainer\":\"scene-1_canvaContainer__2Oiz4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ui\":\"ui_ui__3YHo6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"score\":\"Score_score__2k693\"};","import { useEffect, useRef } from 'react';\n\nimport { Engine, Scene } from 'babylonjs';\n\nimport { ISceneComponent } from './types';\n\nfunction SceneComponent(props: ISceneComponent) {\n  const reactCanvas = useRef(null);\n  const {\n    antialias,\n    engineOptions,\n    adaptToDeviceRatio,\n    sceneOptions,\n    onRender,\n    onSceneReady,\n    ...rest\n  } = props;\n\n  useEffect(() => {\n    if (reactCanvas.current) {\n      const engine = new Engine(reactCanvas.current, antialias, engineOptions, adaptToDeviceRatio);\n      const scene = new Scene(engine, sceneOptions);\n      if (scene.isReady()) {\n        props.onSceneReady(scene);\n      } else {\n        scene.onReadyObservable.addOnce((currentScene) => props.onSceneReady(currentScene));\n      }\n\n      engine.runRenderLoop(() => {\n        if (typeof onRender === 'function') {\n          onRender(scene);\n        }\n        scene.render();\n      });\n\n      const resize = () => {\n        scene.getEngine().resize();\n      };\n\n      if (window) {\n        window.addEventListener('resize', resize);\n      }\n\n      return () => {\n        scene.getEngine().dispose();\n\n        if (window) {\n          window.removeEventListener('resize', resize);\n        }\n      };\n    }\n\n    return undefined;\n  }, [adaptToDeviceRatio, antialias, engineOptions, onRender, props, reactCanvas, sceneOptions]);\n\n  return <canvas ref={reactCanvas} {...rest} style={{width: '100%', height: '100%'}} />;\n}\n\nexport default SceneComponent;\n","import { Mesh, Nullable, Scene, Sound, Texture } from 'babylonjs';\nimport { TGenericObject } from '../utils/types';\n\nexport interface IPrefab {\n  events: Nullable<TGenericObject>;\n  states: Nullable<TGenericObject>;\n}\n\nexport abstract class APrefab implements IPrefab {\n  protected _mesh!: Mesh | TGenericObject<Mesh>;\n  protected _parent!: Mesh;\n  protected _texture!: Texture;\n  protected _sounds!: TGenericObject<Sound>;\n\n  events = {};\n  states = {};\n\n  constructor(protected scene: Scene) {}\n\n  abstract initMesh(): Promise<void>;\n  abstract initSounds(): Promise<void>;\n}\n","import { Observable } from 'babylonjs';\n\nconst UISingleton = function (this: any) {\n  this.isLoading = false;\n  this.onUpdateLoading = new Observable();\n  this.onGameOver = new Observable();\n  this.onStartgame = new Observable();\n\n  return this;\n} as any as { new (): any; };\n\nconst UIEvents = new UISingleton();\nexport { UIEvents };","import { PhysicsImpostor, Scene, SceneLoader, Sound, Mesh, Vector3 } from 'babylonjs';\nimport { APrefab  } from '../../../../../interfaces/Prefab';\nimport { TGenericObject } from '../../../../../utils/types';\nimport { dieAnimation } from './animations';\nimport { UIEvents } from '../../../../../store/ui';\nimport { Ground } from '../ground';\nimport { IMove } from '../../types';\n\nexport class Player extends APrefab {\n  // SAVED\n  // declare _mesh: Mesh;\n\n  states = {\n    died: false,\n  };\n\n  events = {\n    die: this.die.bind(this)\n  };\n\n  constructor(private ground: Ground, scene: Scene, private moveOpts: IMove) {\n    super(scene);\n    this.initSounds();\n\n    UIEvents.onGameOver.add((gameover: boolean) => {\n      if (!gameover) {\n        this.states.died = false;\n\n        this._mesh.position = new Vector3(-1.5, 1, 3.55);\n        (this._mesh as Mesh).rotation.x = -Math.PI / 2;\n\n        this._mesh.physicsImpostor = new PhysicsImpostor(\n          (this._mesh as Mesh), PhysicsImpostor.BoxImpostor, \n          { mass: 0.8, restitution: 0 }\n        );\n\n        this._mesh.rotationQuaternion = null;\n\n        (this._mesh as Mesh).physicsImpostor!.registerOnPhysicsCollide((ground.mesh as TGenericObject<Mesh>).invisibleGround.physicsImpostor!, () => {\n          moveOpts.jumping.canJump = true;\n          moveOpts.jumping.isJumping = false;\n        });\n      }\n    });\n  }\n\n  async initSounds() {\n    const fall = new Sound(\"fall\", \"assets/scene-1/songs/fall.mp3\", this.scene, null, {\n      volume: 0.5\n    })\n\n    this._sounds = {\n      fall,\n    }\n  }\n\n  die() {\n    this.states.died = true;\n    this._sounds.fall.play();\n    this.mesh?.physicsImpostor?.dispose();\n    this.scene.beginDirectAnimation(this.mesh, dieAnimation(), 0, 5, false);\n    UIEvents.onGameOver.notifyObservers(true);\n  }\n\n  async initMesh() {\n    const mesh = await SceneLoader.ImportMeshAsync(\"\", `assets/scene-1/meshes/cat/`, \"cat.babylon\", this.scene);\n    const player = <Mesh> mesh.meshes[0];\n\n    player.name = \"player\"\n    player.parent = null;\n    player.position = new Vector3(-1.5, 1, 3.55);\n    player.rotation.y += -Math.PI / 2;\n  \n    player.physicsImpostor = new PhysicsImpostor(\n      player, PhysicsImpostor.BoxImpostor, \n      { mass: 0.8, restitution: 0 }\n    );\n\n    player.rotationQuaternion = null;\n    this._mesh = player;\n\n    (this._mesh as Mesh).physicsImpostor!.registerOnPhysicsCollide((this.ground.mesh as TGenericObject<Mesh>).invisibleGround.physicsImpostor!, () => {\n      this.moveOpts.jumping.canJump = true;\n      this.moveOpts.jumping.isJumping = false;\n    });\n  }\n\n  get mesh() {\n    return this._mesh;\n  }\n}\n","import {Animation } from 'babylonjs';\n\nexport const dieAnimation = () => {\n  const frameRate = 0.2;\n  const positionFrames = [];\n  const rotationFrames = [];\n\n  const position = new Animation(\n    \"ySlide\",\n    \"position.y\",\n    frameRate,\n    Animation.ANIMATIONTYPE_FLOAT,\n    Animation.ANIMATIONLOOPMODE_CONSTANT\n  );\n\n  const rotation = new Animation(\n    \"Rotation\", \n    \"rotation.x\", \n    frameRate, \n    Animation.ANIMATIONTYPE_FLOAT,\n    Animation.ANIMATIONLOOPMODE_CONSTANT\n  );\n\n  positionFrames.push({ frame: 0 * frameRate, value: -0.56 });\n  positionFrames.push({ frame: 0.8 * frameRate, value: 1 });\n  positionFrames.push({ frame: 2.3 * frameRate, value: -6 });\n  position.setKeys(positionFrames);\n\n \n  rotationFrames.push({ frame: 0 * frameRate, value: -Math.PI/2 });\n  rotationFrames.push({ frame: 0.8 * frameRate, value: Math.PI/2 });\n  rotation.setKeys(rotationFrames);\n\n  return [position, rotation];\n}","export class ListNode<T> {\n  constructor(\n      public mesh: T | null,\n      public next: ListNode<T> | null = null\n  ) {\n      this.next = null;\n  }\n}\n\nexport class ChainedList<T> {\n  private _head: ListNode<T> | null = null\n  private _last: ListNode<T> | null = null\n  private _size = 0;\n\n  constructor() {}\n\n  get head() {\n      return this._head;\n  }\n\n  get last() {\n      return this._last;\n  }\n\n  \n  get size() {\n      return this._size;\n  }\n\n  removeFirstItem() {\n      if (this._head) {\n          this._head = this._head.next;\n          this._size--;\n      }\n  }\n\n  addItem(item: ListNode<T>) {\n      if (!this.head) {\n          this._head = item;\n      }\n\n      if (this.last) {\n          this.last.next = item;\n      }\n\n      this._size++;\n      this._last = item;\n  }\n\n  clear() {\n      this._head = null;\n  }\n}","import { Mesh, Scene, Vector3 } from 'babylonjs';\nimport { ChainedList, ListNode } from '../chained-list/chained-list';\nimport { IInfiniteBackground, TCoordinates, TOptions } from './types';\n\n/**\n * TODO:\n * Adicionar validação de limiter por raio permitindo o threshold ser para qualquer direção\n * Colocar tudo como filho de um mesh especifico para facilitar o debug. Talvez um mesh do infinite scrolling ou o proprio baseMesh\n * Não posso partir do pressuposto que a imagem está no centro, nem que a camera está no centro, preciso, ou de parametros para isso, ou definir isso programaticamente\n * Fazer o calculo de spawnPlace e despawnPlace pra quando o spawn for a esquerda do despawn \n */\nexport class InfiniteBackground {\n  name: string;\n  container: Mesh;\n  parent?: Mesh;\n  meshes: Mesh[];\n  instances: ChainedList<Mesh>;\n  instancesQty = 0;\n\n  constructor(\n    name: string,\n    meshes: IInfiniteBackground['mesh'][],\n    scene: Scene, {\n      velocityX = 0, \n      velocityY = 0, \n      instancesQty = 2,\n      ...opts\n    }: TOptions\n  ) {\n    this.parent = opts.parent;\n    this.container = new Mesh(`${name}-infinity-container`, scene);\n    this.name = name;\n    this.meshes = meshes;\n    this.instances = new ChainedList<Mesh>();\n\n    this.initializeMeshes(opts.despawnPlace);\n\n    this.fillSpawnSpace(opts.spawnPlace, opts.despawnPlace);\n\n    scene.onBeforeRenderObservable.add(() => {\n      const animationRatio = scene.getAnimationRatio();\n      let instance = this.instances.head;\n\n      while (instance) {\n        instance.mesh!.position.x += velocityX * animationRatio;\n        instance.mesh!.position.y += velocityY * animationRatio;\n\n        instance = instance.next;\n\n        if (this.instances.last!.mesh!.position.x < opts.spawnPlace.x) this.addInstance();\n        if (instance && instance.mesh!.position.x < opts.despawnPlace.x) this.removeInstance();\n      }\n    })\n  }\n\n  removeInstance() {\n    this.instances.head!.mesh!.dispose();\n    this.instances.removeFirstItem();\n  }\n\n  initializeMeshes(spawnPlace: TCoordinates) {\n    this.parent?.addChild(this.container);\n\n    this.meshes.forEach(mesh => {\n      mesh.setEnabled(false);\n    });\n  }\n\n  positionLastMesh(mesh: Mesh) {\n    const lastMeshSize = this.instances.last!.mesh!.getBoundingInfo().boundingBox.extendSizeWorld;\n    const lastMeshPosition = this.instances.last!.mesh!.position;\n    const currentMeshSize = mesh.getBoundingInfo().boundingBox.extendSizeWorld;\n    const positionX = lastMeshPosition.x + lastMeshSize.x + currentMeshSize.x;\n    const positionY = lastMeshPosition.y;\n    const positionZ = lastMeshPosition.z;\n\n    mesh.position = new Vector3(positionX, positionY, positionZ);\n  }\n\n  fillSpawnSpace(spawnPlace: TCoordinates, despawnPlace: TCoordinates) {\n    this.instances.addItem(new ListNode(this.getMesh()));\n    let hasEnougth = false;\n    \n    this.instances.last!.mesh!.position = new Vector3(despawnPlace.x, despawnPlace.y, despawnPlace.z);\n    \n    while(!hasEnougth) {\n      const mesh = this.getMesh();\n\n      this.positionLastMesh(mesh);\n      this.instances.addItem(new ListNode(mesh));\n\n      if (this.instances.last!.mesh!.position.x > spawnPlace.x) {\n        hasEnougth = true;\n      }\n    }\n  }\n\n  addInstance() {\n    const instance = this.getMesh();\n\n    this.positionLastMesh(instance);\n\n    this.instances.addItem(new ListNode(instance));\n  }\n\n  getMesh(): Mesh {\n    const index = Math.floor(Math.random() * this.meshes.length);\n    const clone = this.meshes[index].clone();\n    \n    clone.setEnabled(true);\n    this.container?.addChild(clone);\n    \n    clone.name = `${this.instancesQty}-${this.name}`;\n    this.instancesQty++;\n\n    return clone;\n  }\n}\n","import { Color3, Mesh, MeshBuilder, StandardMaterial } from 'babylonjs';\nimport { APrefab } from '../../../../interfaces/Prefab';\nimport { InfiniteBackground } from '../../../../utils/infinite-background/infinite-background';\n\nexport class Sky extends APrefab {\n  async initMesh() {\n    const background = MeshBuilder.CreatePlane('sky', { width: 10, height: 20 });\n    const backgroundMaterial = new StandardMaterial('skyMaterial', this.scene);\n    const parent = new Mesh(\"sky\", this.scene);\n\n    background.position.z = 5;\n    background.position.y = 0.3;\n\n    backgroundMaterial.diffuseColor = new Color3(95/255, 165/255, 245/255);\n    backgroundMaterial.specularColor = new Color3(0, 0, 0);\n    background.material = backgroundMaterial;\n\n    new InfiniteBackground('sky', [background], this.scene, {\n      velocityX: -0.01,\n      parent,\n      spawnPlace: {\n        z: 20,\n        x: 26,\n        y: 0\n      },\n      despawnPlace: {\n        z: 20,\n        x: -30,\n        y: 0\n      }\n    })\n  }\n\n  async initSounds() {\n    throw new Error('Method not implemented.');\n  }\n}\n","import { Color3, Color4, Mesh, MeshBuilder, PhysicsImpostor, Scene, StandardMaterial, Texture, Vector3 } from 'babylonjs';\nimport { APrefab } from '../../../../interfaces/Prefab';\nimport { InfiniteBackground } from '../../../../utils/infinite-background/infinite-background';\n\nfunction createSliderGround(scene: Scene, container: Mesh) {\n  const sliderGround = MeshBuilder.CreatePlane('slider-ground', { width: 10, height: 2 });\n  const sliderGroundMaterial = new StandardMaterial('groundMaterial', scene);\n\n  sliderGroundMaterial.diffuseTexture = new Texture(\"assets/scene-1/textures/calcada.png\", scene);\n  sliderGroundMaterial.specularColor = new Color3(0, 0, 0);\n  sliderGround.material = sliderGroundMaterial;\n  sliderGround.rotationQuaternion = null;\n  sliderGround.rotation.x = Math.PI / 2;\n  sliderGround.position.y = -1.02;\n  sliderGround.position.z = 3.36;\n\n  new InfiniteBackground('slider-ground', [sliderGround], scene, {\n    velocityX: -0.05, \n    parent: container, \n    spawnPlace: {\n      x: 8,\n      z: 3.36,\n      y: -1.02\n    },\n    despawnPlace: {\n      x: -8,\n      z: 3.36,\n      y: -1.02\n    },\n  });\n\n  return sliderGround;\n}\n\nfunction createInvisibleGround(scene: Scene) {\n  const invisibleGround = MeshBuilder.CreateBox('invisible-ground', { size: 1 });\n  const invisibleGroundMaterial = new StandardMaterial('groundMaterial', scene);\n\n  invisibleGround.position = new Vector3(-1.5, -1.5, 3.55);\n\n  invisibleGroundMaterial.alpha = 0;\n  invisibleGround.material = invisibleGroundMaterial;\n\n  invisibleGround.physicsImpostor = new PhysicsImpostor(invisibleGround, PhysicsImpostor.BoxImpostor, {\n    mass: 0,\n    restitution: 0\n  });\n\n  return invisibleGround;\n}\n\nexport class Ground extends APrefab {\n  async initMesh() {\n    const container = new Mesh(\"ground\", this.scene);\n\n    const sliderGround = createSliderGround(this.scene, container);\n    const invisibleGround = createInvisibleGround(this.scene);\n  \n    container.addChild(sliderGround);\n    container.addChild(invisibleGround);\n\n    this._mesh = {\n      invisibleGround,\n      sliderGround\n    }\n  }\n\n  async initSounds() {\n    throw new Error('Method not implemented.');\n  }\n  \n  get mesh() {\n    return this._mesh;\n  }\n}\n","import { Mesh, Scene, SceneLoader } from 'babylonjs';\nimport { APrefab } from '../../../../interfaces/Prefab';\nimport { InfiniteBackground } from '../../../../utils/infinite-background/infinite-background';\n\nexport class City extends APrefab {\n  async initMesh() {\n    const test = await SceneLoader.ImportMeshAsync(\"\", `assets/scene-1/meshes/background/casas/`, \"test.babylon\", this.scene);\n    const parent = new Mesh(\"background\", this.scene);\n\n    test.meshes.forEach(mesh => {\n      parent.addChild(mesh);\n    })\n\n    new InfiniteBackground(\n      'background',\n      test.meshes as Mesh[],\n      this.scene, {\n      velocityX: -0.05,\n      parent,\n      spawnPlace: {\n        z: 13,\n        x: 26,\n        y: -2\n      },\n      despawnPlace: {\n        z: 13,\n        x: -15,\n        y: -1.5\n      }\n    });\n  }\n\n  async initSounds() {\n    throw new Error('Method not implemented.');\n  }\n  \n}\n","import { ArcRotateCamera, Scene, Vector3 } from 'babylonjs';\n\nexport function createCamera(scene: Scene) {\n  const camera = new ArcRotateCamera('camera', -Math.PI / 2, Math.PI / 2, 0, new Vector3(0, 0, 0), scene);\n  camera.radius = 0;\n\n  camera.attachControl();\n  \n  return camera;\n}","import { ActionManager, ExecuteCodeAction, Mesh, Scene, Sound, Vector3 } from 'babylonjs';\nimport { Player } from '../meshes/player/player';\nimport { IMove } from '../types';\nimport { isMobile } from 'react-device-detect';\nimport { UIEvents } from '../../../../store/ui';\n\nfunction playerJump(player: Player, scene: Scene, tempOpts: IMove) {\n  const jump = new Sound(\"jump\", \"assets/scene-1/songs/jump.mp3\", scene, null, {\n    volume: 0.5\n  });\n\n  const impulseDirection = new Vector3(0, 1, 0);\n  const impulseMagnitude = 5.5;\n\n  jump.play();\n\n  if (player && player.mesh.physicsImpostor) {\n    tempOpts.jumping.isJumping = true;\n    tempOpts.jumping.canJump = false;\n\n    (player.mesh as Mesh).physicsImpostor!.setLinearVelocity(new Vector3(0, 0, 0));\n    player.mesh.physicsImpostor.applyImpulse(\n      impulseDirection.scale(impulseMagnitude), \n      (player.mesh as Mesh).getAbsolutePosition()\n    );\n  }\n}\n\nexport function move(scene: Scene, player: Player, opts: IMove): IMove {\n  const tempOpts = { ...opts };\n  const inputMap: { [key: string]: boolean } = {};\n  const newScene = scene;\n\n  newScene.actionManager = new ActionManager(scene);\n\n  UIEvents.onGameOver.add((gameover: boolean) => {\n    if (!gameover) {\n      opts.jumping.canJump = true;\n      opts.jumping.isJumping = false;\n    }\n  });\n\n  newScene.actionManager.registerAction(\n    new ExecuteCodeAction(ActionManager.OnKeyDownTrigger, function handleKeyDown(evt) {\n      inputMap[evt.sourceEvent.key] = evt.sourceEvent.type === 'keydown';\n    })\n  );\n\n  newScene.actionManager.registerAction(\n    new ExecuteCodeAction(ActionManager.OnKeyUpTrigger, function handleKeyUp(evt) {\n      inputMap[evt.sourceEvent.key] = evt.sourceEvent.type === 'keydown';\n    })\n  );\n\n  newScene.onPointerObservable.add((pointerInfo) => {\n    if (tempOpts.jumping.canJump && isMobile) {\n      playerJump(player, scene, tempOpts);\n    }\n  });\n\n  newScene.onBeforeRenderObservable.add(() => {\n    if (inputMap[' '] && tempOpts.jumping.canJump) {\n      playerJump(player, scene, tempOpts);\n    }\n  });\n\n  return tempOpts;\n}","import { Observable } from 'babylonjs';\n\nconst StoreSingleton = function (this: any) {\n  this.score = 0;\n  this.onUpdateScore = new Observable();\n\n  this.onUpdateScore.add((score: number) => {\n    this.score = score;\n  })\n\n  return this;\n} as any as { new (): any; };\n\nconst Store = new StoreSingleton();\nexport { Store };","import { Mesh, MeshBuilder, Scene, SceneLoader, Sound, StandardMaterial, Vector3 } from 'babylonjs';\nimport { start } from 'repl';\nimport { Store } from '../../../../store/store';\nimport { UIEvents } from '../../../../store/ui';\nimport { Player } from '../meshes/player/player';\nimport { IObstacles } from './types';\n\nexport class Obstacles implements IObstacles {\n  private prevTime = new Date().getTime();\n  private currentTime = new Date().getTime();\n  private trySpawnTime = new Date().getTime();\n  private obstacleLimit: Mesh | undefined;\n  private trySpawnTimeout: number = 0;\n  private activeElement: Mesh[] = [];\n  private obstacles: Mesh[] = [];\n  private container: Mesh;\n  private obstacleCounter = 0;\n\n  constructor(\n    private scene: Scene, \n    private player: Player,\n  ) {\n    this.createObstacles();\n    this.container = new Mesh(\"obstacles-container\");\n    this.createObstaclesLimit();\n\n    UIEvents.onGameOver.add((gameover: boolean) => {\n      if (!gameover) {\n        this.activeElement.forEach(obstacle => {\n          obstacle.dispose();\n        });\n\n        this.activeElement = [];\n      }\n    });\n\n    UIEvents.onStartgame.add((startgame: boolean) => {\n      if (!startgame) {\n        scene.onBeforeRenderObservable.add(() => {\n          this.spawnWithDelay(1000, 2000);\n        });\n      }\n    });\n\n    this.scene.onBeforeRenderObservable.add(() => {\n      const animationRatio = this.scene.getAnimationRatio();\n\n      for (let i = this.activeElement.length - 1; i >= 0; i--) {\n        this.activeElement[i].position.x += -0.05 * animationRatio;\n\n        if (this.jumpedObstacle(this.activeElement[i]) && !this.player.states.died) {\n          Store.onUpdateScore.notifyObservers(++Store.score);\n        }\n\n        this.checkObstacleHit(this.activeElement[i]);\n        this.checkObstacleHitsLimit(this.activeElement[i], i);\n      }\n    });\n  }\n\n  private checkObstacleHit(obstacle: Mesh) {\n    if ((this.player.mesh as Mesh)?.intersectsMesh(obstacle) && !this.player.states.died) {\n      this.player.events.die();\n    }\n  }\n\n  private checkObstacleHitsLimit(obstacle: Mesh, i: number) {\n    if (this.obstacleLimit?.intersectsMesh(obstacle)) {\n      this.activeElement[i].dispose();\n      this.activeElement.splice(i, 1);\n    }\n  }\n\n  private jumpedObstacle(obstacle: Mesh) {\n    const pointPlane = obstacle.getChildMeshes()[0];\n    const intersected = pointPlane ? pointPlane.intersectsMesh(this.player.mesh! as Mesh) : false;\n\n    if (intersected) {\n      pointPlane.dispose();\n    }\n\n    return intersected;\n  }\n\n  private canSpawn(minDelay: number, maxDelay: number) {\n    const isMaxDelay = this.currentTime - this.prevTime > maxDelay;\n    const isMinDelay = this.currentTime - this.prevTime > minDelay;\n    const canTry = this.currentTime - this.trySpawnTime > this.trySpawnTimeout;\n    let shouldSpawn = false;\n\n    if (canTry) {\n      this.trySpawnTime = this.currentTime;\n\n      if (isMinDelay) {\n        shouldSpawn = Math.random() > 0.5;\n        \n        if (isMaxDelay) shouldSpawn = true;\n      }\n    }\n\n    if (shouldSpawn) this.prevTime = this.currentTime;\n\n    return shouldSpawn;\n  }\n\n  private generateElement() {\n    const obstacle = this.obstacleCounter;\n    let kind = this.obstacles;\n    \n    const index = Math.floor(Math.random() * kind.length);\n\n    this.obstacleCounter++;\n\n    return kind[index].clone(`obstacle-${obstacle}`);\n  }\n\n  private spawnObstacle() {\n    const obstacle = this.generateElement();\n    const pointPlane = MeshBuilder.CreatePlane('pointPlane', { width: 1, height: 5 }, this.scene);\n    const planeMaterial = new StandardMaterial('planeMateral', this.scene);\n    \n    obstacle.position.z = 3.55;\n    obstacle.position.y = -1;\n    obstacle.position.x = 3;\n    \n    planeMaterial.alpha = 0;\n    pointPlane.rotation.y = Math.PI / 2;\n    pointPlane.material = planeMaterial;\n    pointPlane.position = new Vector3(3, -1, 3.55);\n\n    obstacle.addChild(pointPlane);\n    this.container.addChild(obstacle);    \n    this.activeElement.push(obstacle);\n  }\n\n  private async createObstacles() {\n    const trash = await SceneLoader.ImportMeshAsync(null, `assets/scene-1/meshes/obstacles/trash/`, \"trash.babylon\", this.scene);\n    trash.meshes[0].rotationQuaternion = null;\n    trash.meshes[0].rotation.y = Math.PI;\n    trash.meshes[0].rotation.x = -Math.PI / 2;\n    trash.meshes[0].position.z = -100;\n    trash.meshes[0].name = \"trash\";\n    this.container.addChild(trash.meshes[0]);\n\n    const dog = await SceneLoader.ImportMeshAsync(null, `assets/scene-1/meshes/obstacles/dog/`, \"dog.babylon\", this.scene);\n    dog.meshes[0].scaling = new Vector3(0.5, 0.5, 0.5);\n    dog.meshes[0].rotationQuaternion = null;\n    dog.meshes[0].rotation.y = Math.PI / 2;\n    dog.meshes[0].position.z = -100;\n    dog.meshes[0].name = \"dog\";\n    this.container.addChild(dog.meshes[0]);\n\n    const cone = await SceneLoader.ImportMeshAsync(null, `assets/scene-1/meshes/obstacles/cone/`, \"cone.babylon\", this.scene);\n    cone.meshes[0].scaling = new Vector3(0.5, 0.5, 0.5); \n    cone.meshes[0].rotationQuaternion = null;\n    cone.meshes[0].rotation.y = Math.PI / 2;\n    cone.meshes[0].position.z = -100;\n    cone.meshes[0].name = \"cone\";\n    this.container.addChild(cone.meshes[0]);\n\n    const bucket = await SceneLoader.ImportMeshAsync(null, `assets/scene-1/meshes/obstacles/bucket/`, \"bucket.babylon\", this.scene);\n    bucket.meshes[0].scaling = new Vector3(0.005, 0.005, 0.005); \n    bucket.meshes[0].rotationQuaternion = null;\n    bucket.meshes[0].rotation.y = Math.PI / 2;\n    bucket.meshes[0].position.z = -100;\n    bucket.meshes[0].name = \"bucket\";\n    this.container.addChild(bucket.meshes[0]);\n\n    this.obstacles = [\n      trash.meshes[0],\n      cone.meshes[0],\n      dog.meshes[0],\n      bucket.meshes[0],\n    ] as Mesh[];\n  }\n\n  private createObstaclesLimit() {\n    this.obstacleLimit = MeshBuilder.CreatePlane(\"plane\", { width: 10, height: 10 }, this.scene);\n    this.obstacleLimit.position = new Vector3(-10, 0, 3.5);\n    this.obstacleLimit.rotationQuaternion = null;\n    this.obstacleLimit.rotation.y = -Math.PI / 2;\n  }\n\n  spawnWithDelay(minDelay: number, maxDelay: number) {\n    this.currentTime = new Date().getTime();\n    this.trySpawnTimeout = Math.floor(minDelay / 4);\n\n    if (this.canSpawn(minDelay, maxDelay)) {\n      this.spawnObstacle();\n    }\n  }\n}","import { Color3, Mesh, MeshBuilder, Scene, StandardMaterial, Texture } from 'babylonjs';\nimport { APrefab } from '../../../../interfaces/Prefab';\nimport { InfiniteBackground } from '../../../../utils/infinite-background/infinite-background';\n\nexport class Mountains extends APrefab {\n  async initMesh() {\n    const mountain = MeshBuilder.CreatePlane('mountain', { width: 20, height: 4 });\n    const mountainMaterial = new StandardMaterial('mountainMaterial', this.scene);\n    const parent = new Mesh(\"mountain\", this.scene);\n\n    mountain.position.z = 5;\n    mountain.position.y = 0.3;\n\n    mountainMaterial.diffuseTexture = new Texture(\"assets/scene-1/textures/mountains.png\", this.scene);\n    mountainMaterial.diffuseTexture.hasAlpha = true;\n    mountainMaterial.specularColor = new Color3(0, 0, 0);\n    mountain.material = mountainMaterial;\n\n    mountainMaterial.diffuseTexture.wrapU = Texture.CLAMP_ADDRESSMODE;\n    mountainMaterial.diffuseTexture.wrapV = Texture.CLAMP_ADDRESSMODE;\n\n\n    new InfiniteBackground('mountain', [mountain], this.scene, {\n      velocityX: -0.01,\n      parent,\n      spawnPlace: { z: 17, x: 26, y: 0.1 },\n      despawnPlace: { z: 17, x: -15, y: 0.1 }\n    })\n  }\n\n  async initSounds() {\n    throw new Error('Method not implemented.');\n  }\n}\n","import { Color3, Mesh, MeshBuilder, Scene, StandardMaterial, Texture } from 'babylonjs';\nimport { APrefab } from '../../../../interfaces/Prefab';\nimport { InfiniteBackground } from '../../../../utils/infinite-background/infinite-background';\n\nexport class Street extends APrefab {\n  async initSounds() {\n    throw new Error('method is not implemented yet');\n  }\n\n  async initMesh() {\n    const street = MeshBuilder.CreatePlane('street', { width: 10, height: 10 });\n    const streetMaterial = new StandardMaterial('streetMaterial', this.scene);\n    const texture = new Texture(\"assets/scene-1/textures/street.png\", this.scene);\n    const parent = new Mesh(\"street\", this.scene);\n    \n    texture.wAng = -Math.PI / 2;\n  \n    street.position.z = 5;\n    street.position.y = 0.3;\n    street.rotation.x = Math.PI / 2;\n  \n    streetMaterial.diffuseTexture = texture;\n    streetMaterial.specularColor = new Color3(0, 0, 0);\n    street.material = streetMaterial;\n  \n    new InfiniteBackground('street', [street], this.scene, {\n      velocityX: -0.05,\n      parent,\n      spawnPlace: {\n        z: 10.5,\n        x: 26,\n        y: -1.4\n      },\n      despawnPlace: {\n        z: 10.5,\n        x: -15,\n        y: -1.4\n      }\n    })\n  }\n}","import { Color3, Mesh, MeshBuilder, Scene, StandardMaterial, Texture } from 'babylonjs';\nimport { APrefab } from '../../../../interfaces/Prefab';\nimport { InfiniteBackground } from '../../../../utils/infinite-background/infinite-background';\n\nexport class Fence extends APrefab {\n  async initMesh() {\n    const fence = MeshBuilder.CreatePlane('fence', { width: 0.2, height: 1 });\n    const fenceMaterial = new StandardMaterial('fenceMaterial', this.scene);\n    const texture = new Texture(\"assets/scene-1/textures/fence.png\", this.scene);\n    const parent = new Mesh(\"fence\", this.scene);\n\n    fence.position.z = 5;\n    fence.position.y = 0.3;\n\n    fenceMaterial.diffuseTexture = texture;\n    fenceMaterial.diffuseTexture.hasAlpha = true;\n    fenceMaterial.specularColor = new Color3(0, 0, 0);\n    fence.material = fenceMaterial;\n\n    fenceMaterial.diffuseTexture.wrapU = Texture.CLAMP_ADDRESSMODE;\n    fenceMaterial.diffuseTexture.wrapV = Texture.CLAMP_ADDRESSMODE;\n\n    new InfiniteBackground('fence', [fence], this.scene, {\n      velocityX: -0.05,\n      parent,\n      spawnPlace: {\n        z: 14.7,\n        x: 26,\n        y: -1\n      },\n      despawnPlace: {\n        z: 14.7,\n        x: -15,\n        y: -1\n      }\n    })\n  }\n\n  async initSounds() {\n    throw new Error('Method not implemented.');\n  }\n}\n","import { UIEvents } from '../../store/ui';\n\nexport const loader = async (assets: Promise<void>[]) => {\n  UIEvents.onUpdateLoading.notifyObservers(true);\n  await Promise.all(assets);\n  UIEvents.onUpdateLoading.notifyObservers(false);\n}\n","import {\n  Vector3,\n  HemisphericLight,\n  Scene,\n  AmmoJSPlugin,\n  PhysicsImpostor,\n  MeshBuilder,\n  SceneLoader,\n  Color4,\n  Sound,\n  Mesh,\n} from 'babylonjs';\n\nimport SceneComponent from '../../../components/SceneComponent/SceneComponent';\n\nimport { memo } from 'react';\nimport { Player } from './meshes/player/player';\nimport { Sky } from './meshes/sky';\nimport { Ground } from './meshes/ground';\nimport { City } from './meshes/city';\nimport { createCamera } from './camera';\nimport { move } from './movement/movement';\nimport { Obstacles } from './obstacles/obstacles';\nimport { Mountains } from './meshes/mountains';\nimport { Street } from './meshes/street';\nimport { Fence } from './meshes/fence';\nimport { IMove } from './types';\nimport { loader } from '../../../utils/loader/loader';\n\nasync function onSceneMount(scene: Scene) {\n  scene.enablePhysics(null, new AmmoJSPlugin(false));\n  createCamera(scene);\n\n  let moveOpts: IMove = {\n    jumping: {\n      canJump: false,\n      isJumping: false,\n      jumpStartTime: 0,\n    },\n  }\n\n  const street = new Street(scene);\n  const fence = new Fence(scene);\n  const sky = new Sky(scene);\n  const mountains = new Mountains(scene);\n  const city = new City(scene);\n  const ground = new Ground(scene);\n  const player = new Player(ground, scene, moveOpts);\n\n  await loader([\n    player.initMesh(),\n    street.initMesh(),\n    fence.initMesh(),\n    sky.initMesh(),\n    mountains.initMesh(),\n    city.initMesh(),\n    ground.initMesh()\n  ])\n\n  const light = new HemisphericLight('light', new Vector3(0, 0, 0), scene);\n  light.intensity = 2;\n  new Obstacles(scene, player);\n  \n  // new Sound(\"BgMusic\", \"assets/scene-1/songs/bg-music.mp3\", scene, null, {\n  //   loop: true,\n  //   autoplay: true,\n  //   volume: 0.2,\n  // });\n\n  moveOpts = move(scene, player, moveOpts);\n\n  scene.debugLayer.show();\n}\n\nfunction Game() {\n  return (\n    <SceneComponent\n      antialias\n      id=\"babylonscene\"\n      adaptToDeviceRatio\n      onSceneReady={onSceneMount}\n    />\n  );\n}\n\nexport default memo(Game)\n","export default __webpack_public_path__ + \"static/media/loading-screen.33f82ac5.png\";","import scss from './loading.module.scss';\nimport img from './loading-screen.png';\n\nfunction Loading() {\n  return (\n    <div className={scss.container}>\n      <img className={scss.img} src={img} />\n    </div>\n  )\n}\n\nexport default Loading;\n","import scss from './Score.module.scss';\n\nimport { IScore } from './types';\n\nfunction Score(props: IScore) {\n  return (\n    <span className={scss.score}>\n      {props.score}\n    </span>\n  )\n}\n\nexport default Score;\n","import { Store } from '../../../../store/store';\nimport { UIEvents } from '../../../../store/ui';\nimport scss from './gameover.module.scss';\n\nfunction Gameover() {\n\n  const restartGame = () => {\n    UIEvents.onGameOver.notifyObservers(false);\n    Store.onUpdateScore.notifyObservers(0);\n    document.getElementById('babylonscene')?.focus();\n  };\n\n  return (\n    <div className={scss.container}>\n      <span className={scss.message}>SE FUDEU<br /> KKKK KA JOTA</span>\n\n      <button className={scss.restart} onClick={restartGame}>\n        restart\n      </button>\n    </div>\n  )\n}\n\nexport default Gameover;\n","import { UIEvents } from '../../../../store/ui';\nimport scss from './startgame.module.scss';\n\nfunction Startgame() {\n\n  const startGame = () => {\n    UIEvents.onStartgame.notifyObservers(false);\n    document.getElementById('babylonscene')?.focus();\n  };\n\n  return (\n    <div className={scss.container}>\n      <span className={scss.message}>PULO DO GATO</span>\n      <span className={scss.tip}>APERTA BARRA DE ESPAÇO PARA PULAR</span>\n      <button className={scss.init} onClick={startGame}>\n        INICIAR\n      </button>\n    </div>\n  )\n}\n\nexport default Startgame;\n","import { useEffect, useState } from 'react';\nimport { UIEvents } from '../../../store/ui';\nimport scss from './index.module.scss';\nimport Loading from './loading/Loading';\nimport Score from './score/Score';\nimport Gameover from './gameover/Gameover';\nimport { IUi } from './types';\nimport Startgame from './startgame/Startgame';\n\nexport function UI(props: IUi) {\n  const [isLoading, setIsLoading] = useState(true);\n  const [gameover, setGameOver] = useState(false);\n  const [startgame, setStartGame] = useState(true);\n\n  useEffect(() => {\n    UIEvents.onUpdateLoading.add((isLoading: boolean) => {\n      setIsLoading(isLoading);\n    });\n\n    UIEvents.onGameOver.add((gameover: boolean) => {\n      setGameOver(gameover);\n    });\n\n    UIEvents.onStartgame.add((startgame: boolean) => {\n      if (!startgame) {\n        setStartGame(false);\n      }\n    });\n  }, [])\n\n  return (\n    <div className={scss.ui}>\n      {!isLoading && startgame && <Startgame />}\n      {isLoading ? <Loading /> : <Score score={props.score} />}\n      {gameover && <Gameover />}\n    </div>\n  );\n}","import scss from './index.module.scss';\n\nimport Game from './game';\nimport { UI } from './ui';\nimport { useEffect, useState } from 'react';\n\nimport { Store } from '../../store/store';\n\nfunction Scene1() {\n  const [score, setScore] = useState(0);\n\n  useEffect(() => {\n    Store.onUpdateScore.add((score: number) => {\n      setScore(score);\n    })\n  }, []);\n\n  return (\n    <div className={scss.canvaContainer}>\n      <Game />\n      <UI score={score} />\n    </div>\n  );\n}\n\nexport default Scene1;\n","import Scene1 from './scenes/scene-1';\n\nconst App = () => <Scene1 />\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nimport * as Ammo from 'ammo.js';\n\nAmmo().then(() => {\n  ReactDOM.render(\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n  );\n  // If you want your app to work offline and load faster, you can change\n  // unregister() to register() below. Note this comes with some pitfalls.\n  // Learn more about service workers: https://cra.link/PWA\n  serviceWorkerRegistration.unregister();\n  \n  // If you want to start measuring performance in your app, pass a function\n  // to log results (for example: reportWebVitals(console.log))\n  // or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n  reportWebVitals();\n});\n\n"],"sourceRoot":""}